{
	"info": {
		"_postman_id": "bf56872a-aac2-44d9-ad44-d089a579133d",
		"name": "HW_1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24972202"
	},
	"item": [
		{
			"name": "EP_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{ip_port}}/get_method?name=Yulia&age=33",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"get_method"
					],
					"query": [
						{
							"key": "name",
							"value": "Yulia"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Poly",
							"type": "text"
						},
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "5000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/user_info_3",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"user_info_3"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_2_test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp_f = pm.response.json();\r",
							"let resp_name = resp_f.name\r",
							"let resp_age = resp_f.age\r",
							"let resp_salary = resp_f.salary\r",
							"let req_f = request.data\r",
							"let req_name = req_f.name\r",
							"let req_age = req_f.age\r",
							"let req_salary = +req_f.salary\r",
							"let resp_family = resp_f.family\r",
							"let resp_u_salary_1_5_year = resp_f.family.u_salary_1_5_year\r",
							"\r",
							"pm.test(\"Check resp_name\", function () {\r",
							"    pm.expect(resp_name).to.eql(\"Poly\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check resp_age\", function () {\r",
							"    pm.expect(resp_age).to.eql(\"33\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check resp_salary\", function () {\r",
							"    pm.expect(resp_salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Check req_name\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check req_age\", function () {\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"pm.test(\"Check req_salary\", function () {\r",
							"    pm.expect(resp_salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"console.log(resp_family)\r",
							"\r",
							"pm.test(\"Check resp_u_salary_1_5_year\", function () {\r",
							"    pm.expect(resp_u_salary_1_5_year).to.eql(req_salary*4);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Poly",
							"type": "text"
						},
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/user_info_3",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"user_info_3"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Lesha",
							"type": "text",
							"disabled": true
						},
						{
							"key": "age",
							"value": "33",
							"type": "text",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "5000",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/object_info_1?name=Oleg&age=40&weight=50",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_1"
					],
					"query": [
						{
							"key": "name",
							"value": "Oleg"
						},
						{
							"key": "age",
							"value": "40"
						},
						{
							"key": "weight",
							"value": "50"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/object_info_2?name=Lola&age=30&salary=100",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "Lola"
						},
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_4_test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let req_f = pm.request.url.query.toObject()\r",
							"let resp_f = pm.response.json()\r",
							"let resp_person = resp_f.person\r",
							"\r",
							"pm.test(\"Response have start_qa_salary\", function() {\r",
							"    pm.expect(resp_f).to.have.property(\"start_qa_salary\");\r",
							"    })\r",
							"\r",
							"pm.test(\"Response have qa_salary_after_6_months\", function() {\r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_6_months\");\r",
							"    })\r",
							"\r",
							"pm.test(\"Response have qa_salary_after_12_months\", function() {\r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_12_months\");\r",
							"    })\r",
							"\r",
							"pm.test(\"Response have qa_salary_after_1.5_year\", function() {\r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"    })\r",
							"\r",
							"pm.test(\"Response have qa_salary_after_3.5_years\", function() {\r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"    })\r",
							"\r",
							"pm.test(\"Response have person\", function() {\r",
							"    pm.expect(resp_f).to.have.property(\"person\");\r",
							"    })\r",
							"\r",
							"pm.test(\"Check start_qa_salary = salary\", function(){\r",
							"    pm.expect(resp_f.start_qa_salary).to.eql(+req_f.salary);\r",
							"    })\r",
							"\r",
							"pm.test(\"Check qa_salary_after_6_months = salary*2\", function(){\r",
							"    pm.expect(resp_f.qa_salary_after_6_months).to.eql(+req_f.salary*2);\r",
							"    })\r",
							"\r",
							"pm.test(\"Check qa_salary_after_12_months = salary*2.7\", function(){\r",
							"    pm.expect(resp_f.qa_salary_after_12_months).to.eql(+req_f.salary*2.7);\r",
							"    })\r",
							"\r",
							"pm.test(\"Check qa_salary_after_1.5_year = salary*3.3\", function(){\r",
							"    pm.expect(resp_f[\"qa_salary_after_1.5_year\"]).to.eql(+req_f.salary*3.3);\r",
							"    })\r",
							"\r",
							"pm.test(\"Check qa_salary_after_3.5_years = salary*3.8\", function(){\r",
							"    pm.expect(resp_f[\"qa_salary_after_3.5_years\"]).to.eql(+req_f.salary*3.8);\r",
							"    })\r",
							"\r",
							"pm.test(\"Check person, 1-й элемент из u_name = salary\", function(){\r",
							"    pm.expect(resp_f.person.u_name[1]).to.eql(+req_f.salary);\r",
							"    })\r",
							"\r",
							"pm.test(\"Check u_age = age из request\", function(){\r",
							"    pm.expect(resp_f.person.u_age).to.eql(+req_f.age);\r",
							"    })\r",
							"\r",
							"pm.test(\"Check u_salary_5_years равен salary*4.2\", function(){\r",
							"    pm.expect(resp_f.person[\"u_salary_5_years\"]).to.eql(+req_f.salary*4.2);\r",
							"    })\r",
							"\r",
							"let obj_k = Object.keys(resp_f.person)\r",
							"let obj_v = Object.values(resp_f.person)\r",
							"\r",
							"for (let i = 0; i < obj_k.length; i += 1)\r",
							"    console.log(obj_k[i], obj_v[i])\r",
							"\r",
							"let obj = resp_f.person\r",
							"\r",
							"for (let prop in obj) {\r",
							"  console.log(\"\" + prop + \" = \" + obj[prop]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/object_info_2?name={{name}}&age={{age}}&salary={{salary}}",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Lesha",
							"type": "text",
							"disabled": true
						},
						{
							"key": "age",
							"value": "33",
							"type": "text",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "5000",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/object_info_3?name=Pasha&age=50&salary=100",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Pasha"
						},
						{
							"key": "age",
							"value": "50"
						},
						{
							"key": "salary",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_5_test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let req_name = pm.request.url.query.get(\"name\")\r",
							"let resp_f = pm.response.json()\r",
							"let resp_name = resp_f.name\r",
							"let req_age = pm.request.url.query.get(\"age\")\r",
							"let resp_age = resp_f.age\r",
							"let req_salary = +pm.request.url.query.get(\"salary\")\r",
							"let resp_salary = resp_f.salary\r",
							"let resp_family = resp_f.family\r",
							"let resp_dog = resp_f.family.pets.dog\r",
							"let resp_dog_name = resp_f.family.pets.dog.name\r",
							"let resp_dog_age = resp_f.family.pets.dog.age\r",
							"\r",
							"pm.test(\"Check resp_name = req_name\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check resp_age = req_age\", function () {\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"pm.test(\"Check resp_salary = req_salary\", function () {\r",
							"    pm.expect(resp_salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"console.log(resp_family)\r",
							"\r",
							"pm.test(\"Param dog have param name\", function () {\r",
							"    pm.expect(resp_dog).to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Param dog have param age\", function () {\r",
							"    pm.expect(resp_dog).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"pm.test(\"Param name = Luky\", function () {\r",
							"    pm.expect(resp_dog_name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"Param age = 4\", function () {\r",
							"    pm.expect(resp_dog_age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/object_info_3?name=Tom&age=50&salary=100",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Tom"
						},
						{
							"key": "age",
							"value": "50"
						},
						{
							"key": "salary",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/object_info_4?name=Andrey&age=25&salary=200",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Andrey"
						},
						{
							"key": "age",
							"value": "25"
						},
						{
							"key": "salary",
							"value": "200"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_6_test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp_f = pm.response.json();\r",
							"let req_f = pm.request.url.query;\r",
							"let resp_name = resp_f.name\r",
							"let req_name = req_f.get(\"name\")\r",
							"let resp_age = resp_f.age\r",
							"let req_age = +req_f.get(\"age\")\r",
							"let resp_salary = resp_f.salary\r",
							"let req_salary = +req_f.get(\"salary\")\r",
							"\r",
							"\r",
							"pm.test(\"Check resp_name = req_name\", function (){\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"})\r",
							"\r",
							"pm.test(\"Check resp_age = req_age\", function (){\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"})\r",
							"\r",
							"console.log(req_salary)\r",
							"\r",
							"console.log(resp_salary)\r",
							"\r",
							"console.log(resp_salary[0])\r",
							"console.log(resp_salary[1])\r",
							"console.log(resp_salary[2])\r",
							"\r",
							"pm.test (\"Check resp_salary[0] = req_salary\", function() {\r",
							"    pm.expect(resp_salary[0]).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"pm.test (\"Check resp_salary[1] = req_salary*2\", function() {\r",
							"    pm.expect(+resp_salary[1]).to.eql(req_salary*2);\r",
							"});\r",
							"\r",
							"pm.test (\"Check resp_salary[2] = req_salary*3\", function() {\r",
							"    pm.expect(+resp_salary[2]).to.eql(req_salary*3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", req_name)\r",
							"\r",
							"pm.environment.set(\"age\", req_age)\r",
							"\r",
							"pm.environment.set(\"salary\", req_salary)\r",
							"\r",
							"for (let i = 0; i < resp_salary.length; i++) {\r",
							"   console.log(resp_salary[i]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/object_info_4?name=Andrey&age=25&salary=100",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Andrey"
						},
						{
							"key": "age",
							"value": "25"
						},
						{
							"key": "salary",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Fedor",
							"type": "text"
						},
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/user_info_2",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	]
}